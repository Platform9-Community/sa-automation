set export

kubeconfig := env_var_or_default("KUBECONFIG", "path_to_a_kubeconfig")
kube_context := env_var_or_default("KUBE_CONTEXT", "default")

# Customize any of the below
namespace := "rook-ceph"
ceph_cluster_name := "rook-ceph"
chart_name := "rook-ceph-cluster"
chart_repo := "rook-release"
chart_version := "v1.11.7"
version_safe := replace(chart_version,'.','-')
snapshotclass_version := "v6.2.1"
repo_url := "https://charts.rook.io/release"
monitoring_enabled := "false"
toolbox_enabled := "true"
dashboard_enabled := "true"
dashboard_port := "32443"
allow_multiple_mon_per_node := "false"
mon_count := "3"
disable_crashcollector := "true"
storageclass_to_test := "ceph-filesystem"
enable_cephfs_snapshots := "false"
enable_rbd_snapshots := "false"
# end customizations

_helm_common := '--namespace $namespace --kubeconfig $kubeconfig --kube-context $kube_context'

_helm_args := '$chart_name $chart_repo/$chart_name \
  --version $chart_version \
  --set "clusterName=$ceph_cluster_name" \
  --set "operatorNamespace=$namespace" \
  --set "cephClusterSpec.mon.allowMultiplePerNode=$allow_multiple_mon_per_node" \
  --set "cephClusterSpec.mon.count=$mon_count" \
  --set "cephClusterSpec.dashboard.enabled=$dashboard_enabled" \
  --set "cephClusterSpec.dashboard.port=$dashboard_port" \
  --set "monitoring.enabled=$monitoring_enabled" \
  --set "toolbox.enabled=$toolbox_enabled" \
  --set "cephClusterSpec.storage.useAllNodes=false" \
  --set "cephClusterSpec.storage.useAllDevices=false" \
  --set "cephClusterSpec.crashCollector.disable=$disable_crashcollector" \
  --set "cephFileSystemVolumeSnapshotClass.enabled=$enable_cephfs_snapshots" \
  --set "cephBlockPoolsVolumeSnapshotClass.enabled=$enable_rbd_snapshots" \
  --values values_$version_safe.yaml \
  --values network_connections.yaml \
  --values node_storage.yaml \
  --values values_tolerations.yaml \
'

_kubectl_common := "--context $kube_context --kubeconfig $kubeconfig"

_bash := "#!/usr/bin/env bash\nset -vuxo pipefail"

_sh := "just --no-highlight _exec_sh"

_default:
  @just --list --unsorted

_exec_sh *ARGS:
  @{{_bash}}
  {{ARGS}}

setup:
  @{{_sh}} "helm repo add {{chart_repo}} {{repo_url}} && helm repo update"

generate_values:
  @{{_sh}} "if [[ -f values_{{version_safe}}.yaml ]]; then cp values_{{version_safe}}.yaml values_{{version_safe}}.yaml.$(date '+%Y%m%d_%s'); fi"
  @{{_sh}} "helm show values {{chart_repo}}/{{chart_name}} --version \
    {{chart_version}} > values_{{version_safe}}.yaml"

search_chart_versions:
  @{{_sh}} "helm search repo -l {{chart_repo}}/{{chart_name}}"

create_namespace:
  @echo "Namespace may already exist, in which case ignore errors"
  @{{_sh}} "kubectl create ns {{namespace}} {{_kubectl_common}} || true"

install: create_namespace
  @{{_sh}} "helm install {{_helm_args}} {{_helm_common}}"

upgrade:
  @{{_sh}} "helm upgrade {{_helm_args}} {{_helm_common}}"

uninstall:
  @{{_sh}} "kubectl --namespace {{namespace}} {{_kubectl_common}} patch cephcluster rook-ceph \
    --type merge -p '{\"spec\":{\"cleanupPolicy\":{\"confirmation\":\"yes-really-destroy-data\"}}}'"
  @{{_sh}} "helm uninstall {{chart_name}} {{_helm_common}} || true"
  @{{_sh}} "kubectl --namespace {{namespace}} {{_kubectl_common}} delete cephcluster {{ceph_cluster_name}} || true"

list_clusters:
  @{{_sh}} "helm list --filter {{chart_name}} --all-namespaces --kubeconfig {{kubeconfig}} \
    --kube-context {{kube_context}}"
  @{{_sh}} "kubectl {{_kubectl_common}} get pods -l 'app=rook-ceph-operator' -A"
  @{{_sh}} "kubectl {{_kubectl_common}} get cephcluster -A"

status:
  @{{_sh}} "kubectl --namespace {{namespace}} {{_kubectl_common}} \
    exec -it $(kubectl -n {{namespace}} {{_kubectl_common}} get pod -l 'app=rook-ceph-tools' \
    -o jsonpath='{.items[0].metadata.name}') -- bash -c 'ceph status; ceph osd tree; ceph osd status'"

test:
  @{{_sh}} "envsubst < test-pvc.yaml | kubectl apply {{_kubectl_common}} -f -"
  @{{_sh}} "kubectl {{_kubectl_common}} wait -n default --for=condition=ready pod/busyboxtest --timeout=120s"
  @{{_sh}} "kubectl {{_kubectl_common}} get pvc -l 'app=busyboxtest'"

clean_test:
  @{{_sh}} "envsubst < test-pvc.yaml | kubectl delete {{_kubectl_common}} --force=true -f -"

ceph_collect:
  @{{_sh}} "kubectl {{_kubectl_common}} exec -it $(kubectl {{_kubectl_common}} get pod -l app=rook-ceph-tools -o jsonpath={'.items[0].metadata.name}' -n {{namespace}} ) -n {{namespace}} -- sh -c 'rm -f /tmp/ceph-collect_*.tar.gz'"
  @{{_sh}} "kubectl {{_kubectl_common}} exec -it $(kubectl {{_kubectl_common}} get pod -l app=rook-ceph-tools -o jsonpath='{.items[0].metadata.name}' -n {{namespace}} ) -n {{namespace}} -- sh -c 'curl -SL https://raw.githubusercontent.com/42on/ceph-collect/master/ceph-collect|python3'"
  @{{_sh}} "kubectl {{_kubectl_common}} exec -it $(kubectl {{_kubectl_common}} get pod -l app=rook-ceph-tools -o jsonpath={'.items[0].metadata.name}' -n {{namespace}} ) -n {{namespace}} -- sh -c 'mv /tmp/ceph-collect_*.tar.gz /tmp/ceph-collect.tar.gz'"
  @{{_sh}} "kubectl {{_kubectl_common}} cp {{namespace}}/$(kubectl {{_kubectl_common}} get pod -l app=rook-ceph-tools -o jsonpath={'.items[0].metadata.name}' -n {{namespace}}):/tmp/ceph-collect.tar.gz /tmp/ceph-collect.tar.gz"
  @{{_sh}} "echo \"Copied to /tmp/ceph-collect.tar.gz locally\""
